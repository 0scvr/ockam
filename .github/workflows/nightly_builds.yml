name: Nightly Builds

on:
  repository_dispatch:
    types: run-nightly-builds
  schedule:
    - cron:  '0 1 * * *'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        java: [8, 9, 10, 11, 12, 13]

    steps:
      - name: Setup java
        uses: actions/setup-java@d202f5dbf7256730fb690ec59f6381650114feb2 # v1.4.3
        with:
          java-version: ${{ matrix.java }}

      - name: Download elixir
        run: wget https://packages.erlang-solutions.com/erlang/debian/pool/elixir_1.10.4-1~ubuntu~focal_all.deb

      - name: Validate elixir download
        run: echo 'd3d300f24b25eb4383f9437d458eacd9d646719550a85399ee2a6e6d64dadf5c  elixir_1.10.4-1~ubuntu~focal_all.deb' | sha256sum -c

      - name: Install elixir
        run: sudo dpkg -i 'elixir_1.10.4-1~ubuntu~focal_all.deb'

      - name: Setup hex
        run: mix local.hex --force

      - name: Setup rebar
        run: mix local.rebar --force

      - name: Checkout
        uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # v2.3.3

      - id: Build_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew build

      - id: Test_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew test

      - id: Clean_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew clean

      - id: Build_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew build -PcmakeGenerator="Unix Makefiles"

      - id: Test_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew test -PcmakeGenerator="Unix Makefiles"

      - id: Clean_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew clean -PcmakeGenerator="Unix Makefiles"
