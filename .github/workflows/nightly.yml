name: Nightly

on:
  repository_dispatch:
    types: run-nightly-builds
  schedule:
    - cron:  '0 1 * * *'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        otp: [23.2]
        elixir: [1.11]
        rust: [stable]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Java
        uses: actions/setup-java@d202f5dbf7256730fb690ec59f6381650114feb2 # v1.4.3
        with:
          java-version: ${{ matrix.java }}

      - name: Setup Elixir
        uses: actions/setup-elixir@3c118cec41f6c3bfc2c7f2aef9bec886ab0b2324 # v1.5.0
        with:
          experimental-otp: true # github.com/actions/setup-elixir/issues/49
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Setup Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

      - id: Build_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew build

      - id: Test_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew test

      - id: Clean_not_windows
        if: "!startsWith(matrix.os, 'windows')"
        run: ./gradlew clean

      - id: Build_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew build -PcmakeGenerator="Unix Makefiles"

      - id: Test_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew test -PcmakeGenerator="Unix Makefiles"

      - id: Clean_windows
        if: "startsWith(matrix.os, 'windows')"
        run: ./gradlew clean -PcmakeGenerator="Unix Makefiles"
