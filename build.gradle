
['build', 'test', 'clean'].each { t ->
  task "${t}" {
    group 'Ockam'
    def implementationTasks = ['c', 'elixir', 'go', 'javascript', 'rust', 'swift'].stream().map { impl ->
      tasks.create("${t}${impl.capitalize()}") {
        group impl.capitalize()
        doLast {
          exec {
            workingDir "implementations/${impl}"
            commandLine '../../gradlew', '-q', "${t}"
          }
        }
      }
    }.toArray()

    for (int i = 0; i < implementationTasks.length - 1; i++) {
      implementationTasks.getAt(i + 1).mustRunAfter(implementationTasks.getAt(i))
    }

    dependsOn implementationTasks
  }
}

clean.doLast {
  exec {
    commandLine 'bash', '-c', """
      vagrant global-status | grep builder- | cut -d \' \' -f 1 | while read -r line; do vagrant destroy -f \$line; done
    """
    ignoreExitValue true
  }
  delete '.builder'
}
